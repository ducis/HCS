=============================================================================
List of generated methods in project: ProjectADC

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "AD1"       (bean ADC)
   - AD1_Measure -This method performs one measurement on all channels that are set in the bean inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_GetValue16 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.

Module "AS1"       (bean AsynchroSerial)
   - AS1_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read. Version specific 
                information for Freescale 56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU 
                and the receiver is configured to use DMA controller then this method only sets the selected DMA channel. Then 
                the status of the DMA transfer can be checked using GetCharsInRxBuf method. See an example of a typical usage 
                for details about the communication using DMA.
   - AS1_SendChar -Sends one character to the channel. If the bean is temporarily disabled (Disable method) SendChar method 
                only stores data into an output buffer. In case of a zero output buffer size, only one character can be stored. 
                Enabling the bean (Enable method) starts the transmission of the stored data. This method is available only if 
                the transmitter property is enabled.  Version specific information for Freescale 56800 derivatives ]   DMA mode:
                If DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method only sets selected DMA channel. Then the status of the DMA transfer can be checked using 
                GetCharsInTxBuf method. See an example of a typical usage for details about communication using DMA.
   - AS1_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the receiver 
                property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If DMA 
                controller is available on the selected CPU and the receiver is configured to use DMA controller then this 
                method returns the number of characters in the receive buffer.
   - AS1_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if the 
                transmitter property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If 
                DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method returns the number of characters in the transmit buffer.

Module "TI1"       (bean TimerInt)

Module "Byte1"     (bean ByteIO)
   - Byte1_GetDir -Returns selected direction.
   - Byte1_GetVal -Returns the value of the Input/Output bean. If the direction is [input] then it reads the input value of the 
                pins and returns it. If the direction is [output] then it returns the last written value (see <Safe mode> 
                property for limitations).
   - Byte1_PutVal -Specified value is passed to the Input/Output bean. If the direction is [input] saves the value to a memory 
                or a register, this value will be written to the pins after switching to the output mode - using [SetDir(TRUE)] 
                (see <Safe mode> property for limitations). If the direction is [output] it writes the value to the port. 
                (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Byte1_GetBit -Returns the value of the specified bit/pin of the Input/Output bean. If the direction is [input] then it 
                reads the input value of the pin and returns it. If the direction is [output] then it returns the last written 
                value (see <Safe mode> property for limitations).
   - Byte1_PutBit -Specified value is passed to the specified bit/pin of the Input/Output bean. If the direction is [input] it 
                saves the value to a memory or a register, this value will be written to the pin after switching to the output 
                mode - using [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] it writes 
                the value to the pin. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Byte1_SetBit -Sets (to one) the specified bit of the Input/Output bean. It is the same as [PutBit(Bit, TRUE)]. (Method is 
                available only if the Direction = _[output]_ or _[input/output]_).
   - Byte1_ClrBit -Clears (set to zero) the specified bit of the Input/Output bean. It is the same as [PutBit(Bit, FALSE)]. 
                (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Byte1_NegBit -Negates (inverts) the specified bit of the Input/Output bean. It is the same as [PutBit(Bit,!GetBit(Bit))]. 
                (Method is available only if the Direction = _[output]_ or _[input/output]_).

Module "Cpu"       (bean MC9S12XS256_112)
   - Cpu_EnableInt -Enable maskable interrupts
   - Cpu_DisableInt -Disable maskable interrupts
   - Cpu_SetWaitMode -Set low power mode - Wait mode.  For more information about the wait mode see documentation of this CPU.  
                Release from Wait mode: Reset or interrupt
   - Cpu_SetStopMode -Set low power mode - Stop mode.  For more information about the stop mode see documentation of this CPU.

===================================================================================
